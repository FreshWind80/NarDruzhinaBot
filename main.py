
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes,
    ConversationHandler, filters
)

STAGE_MESSAGE, STAGE_ADDRESS, STAGE_MEDIA, STAGE_CONFIRM = range(4)
TARGET_GROUP_CHAT_ID = -1001234567890  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?")
    return STAGE_MESSAGE

async def get_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['message'] = update.message.text
    await update.message.reply_text("üìç –ì–¥–µ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ? –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å.")
    return STAGE_ADDRESS

async def get_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['address'] = update.message.text
    keyboard = [["üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –º–µ–¥–∏–∞", "‚è≠ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞"]]
    await update.message.reply_text(
        "üì∑ –ú–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞¬ª.",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return STAGE_MEDIA

async def get_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    media = update.message.photo or update.message.video

    if text == "‚è≠ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞":
        context.user_data['media'] = None
        return await confirm(update, context)

    if media:
        context.user_data['media'] = update.message
        return await confirm(update, context)

    if text == "üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –º–µ–¥–∏–∞":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞¬ª.")
        return STAGE_MEDIA

    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –º–µ–¥–∏–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞¬ª.")
    return STAGE_MEDIA

async def confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = context.user_data['message']
    address = context.user_data['address']
    has_media = "‚úÖ –î–∞" if context.user_data['media'] else "‚ùå –ù–µ—Ç"

    summary = f"""–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:
üö® –ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–µ: {message}
üìç –ê–¥—Ä–µ—Å: {address}
üì∑ –ú—É–ª—å—Ç–∏–º–µ–¥–∏–∞: {has_media}

–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ? (–¥–∞ / –Ω–µ—Ç)
"""
    await update.message.reply_text(summary, reply_markup=ReplyKeyboardRemove())
    return STAGE_CONFIRM

async def send_report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    msg_text = f"""‚ö†Ô∏è –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.full_name or '@' + user.username}:

üö® –ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–µ: {context.user_data['message']}
üìç –ê–¥—Ä–µ—Å: {context.user_data['address']}
"""
    media = context.user_data.get('media')
    if media:
        if media.photo:
            file = await media.photo[-1].get_file()
            await context.bot.send_photo(chat_id=TARGET_GROUP_CHAT_ID, photo=file.file_id, caption=msg_text)
        elif media.video:
            file = await media.video.get_file()
            await context.bot.send_video(chat_id=TARGET_GROUP_CHAT_ID, video=file.file_id, caption=msg_text)
    else:
        await context.bot.send_message(chat_id=TARGET_GROUP_CHAT_ID, text=msg_text)

    await update.message.reply_text("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–ø–∞—Å–∏–±–æ!")
    return ConversationHandler.END

async def cancel_report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω.")
    return ConversationHandler.END

if __name__ == '__main__':
    import os
    TOKEN = os.getenv("BOT_TOKEN")

    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            STAGE_MESSAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_message)],
            STAGE_ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_address)],
            STAGE_MEDIA: [
                MessageHandler(filters.PHOTO | filters.VIDEO | filters.TEXT, get_media)
            ],
            STAGE_CONFIRM: [
                MessageHandler(filters.Regex('^(–¥–∞|–î–∞|yes|Yes)$'), send_report),
                MessageHandler(filters.Regex('^(–Ω–µ—Ç|–ù–µ—Ç|no|No)$'), cancel_report),
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    app.add_handler(conv_handler)
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

    app.run_polling()

async def debug_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"Chat ID: {update.effective_chat.id}")

app.add_handler(CommandHandler("debug", debug_chat))

